#Hyperparameter tuning on training dataset to find optimum hyperparameters
#To tune a specific parameter uncomment its block below

trainingInput:
  scaleTier: CUSTOM
  masterType: n1-highmem-8
  runtimeVersion: '2.1'
  pythonVersion: '3.7'
#  scheduling:
#    maxRunningTime: 7200s
  hyperparameters:
    goal: MAXIMIZE            #Hyperparameter Tuning run to maximise accuracy in models
    hyperparameterMetricTag: eval_score
    maxTrials: 10                    #for CATEGORICAL/Discrete values, maxTrials = # of CATEGORICAL/Discrete variables
    maxParallelTrials: 2
    maxFailedTrials: 4
    enableTrialEarlyStopping: True
    params:
    # - parameterName: recurrent_layer1
    #   type: INTEGER
    #   minValue: 200
    #   maxValue: 500
    # - parameterName: recurrent_layer2
    #   type: INTEGER
    #   minValue: 200
    #   maxValue: 500
    # - parameterName: recurrent_dropout
    #   type: DOUBLE
    #   minValue: 0.20
    #   maxValue: 0.70
    # - parameterName: after_recurrent_dropout
    #   type: DOUBLE
    #   minValue: 0.20
    #   maxValue: 0.70
    # - parameterName: recurrent_recurrent_dropout
    #   type: DOUBLE
    #   minValue: 0.20
    #   maxValue: 0.70
    # - parameterName: recurrent_weight_initializer
    #   type: CATEGORICAL
    #   categoricalValues: [
    #   random_normal,random_uniform,truncated_normal,zeros,
    #   ones,glorot_uniform,glorot_normal
    #   ]
    # - parameterName: conv1_filters
    #   type: INTEGER
    #   minValue: 20
    #   maxValue: 40
    # - parameterName: conv2_filters
    #   type: INTEGER
    #   minValue: 40
    #   maxValue: 80
    # - parameterName: conv3_filters
    #   type: INTEGER
    #   minValue: 100
    #   maxValue: 140
    # - parameterName: conv3_filters
    #   type: DISCRETE
    #   discreteValues:
    #   - 128
    #   - 256
    #   - 512
    # - parameterName: window_size
    #   type: DISCRETE
    #   discreteValues:
    #   - 3
    #   - 5
    #   - 7
    #   - 11
    # - parameterName: conv2d_dropout
    #   type: DOUBLE
    #   minValue: 0.25
    #   maxValue: 0.75
    #   scaleType: UNIT_LINEAR_SCALE
    # # - parameterName: conv_weight_initializer
    #   type: CATEGORICAL
    #   categoricalValues: [
    #   random_normal,random_uniform,truncated_normal,zeros,
    #   ones,glorot_uniform,glorot_normal
    #   ]
    # - parameterName: dense_dropout
    #   type: DOUBLE
    #   minValue: 0.2
    #   maxValue: 0.8
    # - parameterName: dense_1
    #   type: DISCRETE
    #   discreteValues:
    #   - 100
    #   - 128
    #   - 200
    #   - 300
    # - parameterName: dense_1
    #   type: INTEGER
    #   minValue: 50
    #   maxValue: 500
    # - parameterName: dense_2
    #   type: INTEGER
    #   minValue: 50
    #   maxValue: 500
    # - parameterName: dense_3
    #   type: INTEGER
    #   minValue: 50
    #   maxValue: 500
    # - parameterName: dense_4
    #   type: INTEGER
    #   minValue: 50
    #   maxValue: 500
    # - parameterName: dense_weight_initializer
    #   type: CATEGORICAL
    #   categoricalValues: [
    #   random_normal,random_uniform,truncated_normal,zeros,
    #   ones,glorot_uniform,glorot_normal
    #   ]
    # - parameterName: kernel_regularizer
    #   type: CATEGORICAL
    #   categoricalValues: [l1, l2]
    # - parameterName: optimizer
    #   type: CATEGORICAL
    #   categoricalValues: [
    #   adam, sgd, rmsprop, adagrad, adamax
    #   ]
    #   scaleType: UNIT_LINEAR_SCALE
    # - parameterName: batch_size
    #   type: INTEGER
    #   minValue: 42
    #   maxValue: 200
    #   scaleType: UNIT_LINEAR_SCALE
    - parameterName: learning_rate
      type: DOUBLE
      minValue: 0.0003
      maxValue: 0.003
